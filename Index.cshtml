@page 
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!---->
<head>
    <style type="text/css">
        canvas{border:thin solid black}
        p{background: gray;
          color:white;
          padding:10px;
          margin:5px;
          border:thin solid black;
        }
    </style>
</head>
<body>
    <canvas id="canvas" width="1000" height="700">
    </canvas>

    
    <script>
        
        var ctx = document.getElementById("canvas").getContext("2d");
        var xStart = 200;
        var yStart = 50;
        var width = 60;

        function drawHorizontalLine(ctx,x1, x2, y) {
            ctx.beginPath();
            ctx.moveTo(x1, y);
            ctx.lineTo(x2, y);
            ctx.stroke();
            ctx.closePath();
        }
        function drawVerticalLine(ctx,x, y1, y2) {
            ctx.beginPath();
            ctx.moveTo(x, y1);
            ctx.lineTo(x, y2);
            ctx.stroke();
            ctx.closePath();
        }
        function drawDiagonalLine(ctx,x1, x2, y1, y2) {
            ctx.beginPath();
            ctx.moveTo(x1, y1);
            ctx.lineTo(x2, y2);
            ctx.stroke();
            ctx.closePath();
        }
        function drawGameBoard(ctx,xStart, yStart,width) {
            ctx.strokeStyle = "black";
            ctx.lineWidth = "4";
            for (let i = 0; i < 10; i++) {
                drawHorizontalLine(ctx,xStart,xStart + 8 * width, yStart + i * width);
            }
            for (let i = 1; i < 8; i++) {
                drawVerticalLine(ctx,xStart + i * width, yStart, yStart + 4 * width);
                drawVerticalLine(ctx,xStart + i * width, yStart + 5 * width, yStart + 9 * width);          
            }
            drawVerticalLine(ctx,xStart, yStart, yStart + 9 * width);
            drawVerticalLine(ctx,xStart + 8 * width, yStart, yStart + 9 * width);
            drawDiagonalLine(ctx,xStart + 3 * width, xStart + 5 * width, yStart, yStart + 2 * width);
            drawDiagonalLine(ctx,xStart + 3 * width, xStart + 5 * width, yStart + 2 * width, yStart);
            drawDiagonalLine(ctx,xStart + 3 * width, xStart + 5 * width, yStart + 7 * width, yStart + 9 * width);
            drawDiagonalLine(ctx,xStart + 3 * width, xStart + 5 * width, yStart + 9 * width, yStart + 7 * width);
        }
        

        function drawPiece(ctx,x,y,width,c,n){
            ctx.strokeStyle = "black";
            ctx.fillStyle = "#FFE5B4";
            ctx.beginPath();
            ctx.lineWidth = "4";
            ctx.arc(x, y, width/2.4, 0, Math.PI * 2, true);
            ctx.fill();
            ctx.stroke();
            ctx.closePath();
            ctx.lineWidth = "1";
            ctx.font = "24px sans-serif";
            if (c==1){
                ctx.fillStyle = "black";
                if (n==1){
                    ctx.fillText("将", x - width / 5, y);
                    ctx.strokeText("将", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("general", x - width / 3.5, y + width / 4.5);
                    ctx.strokeText("general", x - width / 3.5, y + width / 4.5);
                } else if (n==2){
                    ctx.fillText("车", x - width / 5, y);
                    ctx.strokeText("车", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("chariot", x - width / 4, y + width / 4.5);
                    ctx.strokeText("chariot", x - width / 4, y + width / 4.5);
                } else if (n==3){
                    ctx.fillText("砲", x - width / 5, y);
                    ctx.strokeText("砲", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("catapult", x - width / 3.5, y + width / 4.5);
                    ctx.strokeText("catapult", x - width / 3.5, y + width / 4.5);
                } else if (n==4){
                    ctx.fillText("马", x - width / 5, y);
                    ctx.strokeText("马", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("knight", x - width / 4.5, y + width / 4.5);
                    ctx.strokeText("knight", x - width / 4.5, y + width / 4.5);
                } else if (n==5){
                    ctx.fillText("象", x - width / 5, y);
                    ctx.strokeText("象", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("elephant", x - width / 3.2, y + width / 4.5);
                    ctx.strokeText("elephant", x - width / 3.2, y + width / 4.5);
                } else if (n==6){
                    ctx.fillText("士", x - width / 5, y);
                    ctx.strokeText("士", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("guard", x - width / 4.5, y + width / 4.5);
                    ctx.strokeText("guard", x - width / 4.5, y + width / 4.5);
                } else {
                    ctx.fillText("卒", x - width / 5, y);
                    ctx.strokeText("卒", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("private", x - width / 4.5, y + width / 4.5);
                    ctx.strokeText("private", x - width / 4.5, y + width / 4.5);
                }
            } else {
                ctx.strokeStyle = "red";
                ctx.fillStyle = "red";
                if (n==1){
                    ctx.fillText("帅", x - width / 5, y);
                    ctx.strokeText("帅", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("marshal", x - width / 3.5, y + width / 4.5);
                    ctx.strokeText("marshal", x - width / 3.5, y + width / 4.5);
                } else if (n==2){
                    ctx.fillText("车", x - width / 5, y);
                    ctx.strokeText("车", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("chariot", x - width / 4, y + width / 4.5);
                    ctx.strokeText("chariot", x - width / 4, y + width / 4.5);
                } else if (n==3){
                    ctx.fillText("炮", x - width / 5, y);
                    ctx.strokeText("炮",x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("cannon", x - width / 3.5, y + width / 4.5);
                    ctx.strokeText("cannon", x - width / 3.5, y + width / 4.5);
                } else if (n==4){
                    ctx.fillText("马", x - width / 5, y);
                    ctx.strokeText("马", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("knight", x - width / 4.5, y + width / 4.5);
                ctx.strokeText("knight", x - width / 4.5, y + width / 4.5);
                } else if (n==5){
                    ctx.fillText("相", x - width / 5, y);
                    ctx.strokeText("相", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("elephant", x - width / 3.2, y + width / 4.5);
                    ctx.strokeText("elephant", x - width / 3.2, y + width / 4.5);
                } else if (n==6){
                    ctx.fillText("仕", x - width / 5, y);
                    ctx.strokeText("仕", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("guard", x - width / 4.5, y + width / 4.5);
                    ctx.strokeText("guard", x - width / 4.5, y + width / 4.5);
                } else {
                    ctx.fillText("兵", x - width / 5, y);
                    ctx.strokeText("兵", x - width / 5, y);
                    ctx.font = "10px sans-serif";
                    ctx.fillText("soldier", x - width / 4.5, y + width / 4.5);
                    ctx.strokeText("soldier", x - width / 4.5, y + width / 4.5);
                }
            }
        }

        
       
        //draw static pieces and game board lines
       
            //all 32 game pieces
        
        drawGameBoard(ctx,xStart, yStart, width);
        
        drawPiece(ctx, @Model.pieces[0].X, @Model.pieces[0].Y, @Model.pieces[0].W, @Model.pieces[0].C, @Model.pieces[0].N);//0
        drawPiece(ctx, @Model.pieces[1].X, @Model.pieces[1].Y, @Model.pieces[1].W, @Model.pieces[1].C, @Model.pieces[1].N);//1
        drawPiece(ctx, @Model.pieces[2].X, @Model.pieces[2].Y, @Model.pieces[2].W, @Model.pieces[2].C, @Model.pieces[2].N);//2
        drawPiece(ctx, @Model.pieces[3].X, @Model.pieces[3].Y, @Model.pieces[3].W, @Model.pieces[3].C, @Model.pieces[3].N);//3
        drawPiece(ctx, @Model.pieces[4].X, @Model.pieces[4].Y, @Model.pieces[4].W, @Model.pieces[4].C, @Model.pieces[4].N);//4
        drawPiece(ctx, @Model.pieces[5].X, @Model.pieces[5].Y, @Model.pieces[5].W, @Model.pieces[5].C, @Model.pieces[5].N);//5
        drawPiece(ctx, @Model.pieces[6].X, @Model.pieces[6].Y, @Model.pieces[6].W, @Model.pieces[6].C, @Model.pieces[6].N);//6
        drawPiece(ctx, @Model.pieces[7].X, @Model.pieces[7].Y, @Model.pieces[7].W, @Model.pieces[7].C, @Model.pieces[7].N);//7
        drawPiece(ctx, @Model.pieces[8].X, @Model.pieces[8].Y, @Model.pieces[8].W, @Model.pieces[8].C, @Model.pieces[8].N);//8
        drawPiece(ctx, @Model.pieces[9].X, @Model.pieces[9].Y, @Model.pieces[9].W, @Model.pieces[9].C, @Model.pieces[9].N);//9
        drawPiece(ctx, @Model.pieces[10].X, @Model.pieces[10].Y, @Model.pieces[10].W, @Model.pieces[10].C, @Model.pieces[10].N);//10
        drawPiece(ctx, @Model.pieces[11].X, @Model.pieces[11].Y, @Model.pieces[11].W, @Model.pieces[11].C, @Model.pieces[11].N);//11
        drawPiece(ctx, @Model.pieces[12].X, @Model.pieces[12].Y, @Model.pieces[12].W, @Model.pieces[12].C, @Model.pieces[12].N);//12
        drawPiece(ctx, @Model.pieces[13].X, @Model.pieces[13].Y, @Model.pieces[13].W, @Model.pieces[13].C, @Model.pieces[13].N);//13
        drawPiece(ctx, @Model.pieces[14].X, @Model.pieces[14].Y, @Model.pieces[14].W, @Model.pieces[14].C, @Model.pieces[14].N);//14
        drawPiece(ctx, @Model.pieces[15].X, @Model.pieces[15].Y, @Model.pieces[15].W, @Model.pieces[15].C, @Model.pieces[15].N);//15
        drawPiece(ctx, @Model.pieces[16].X, @Model.pieces[16].Y, @Model.pieces[16].W, @Model.pieces[16].C, @Model.pieces[16].N);//16
        drawPiece(ctx, @Model.pieces[17].X, @Model.pieces[17].Y, @Model.pieces[17].W, @Model.pieces[17].C, @Model.pieces[17].N);//17
        drawPiece(ctx, @Model.pieces[18].X, @Model.pieces[18].Y, @Model.pieces[18].W, @Model.pieces[18].C, @Model.pieces[18].N);//18
        drawPiece(ctx, @Model.pieces[19].X, @Model.pieces[19].Y, @Model.pieces[19].W, @Model.pieces[19].C, @Model.pieces[19].N);//19
        drawPiece(ctx, @Model.pieces[20].X, @Model.pieces[20].Y, @Model.pieces[20].W, @Model.pieces[20].C, @Model.pieces[20].N);//20
        drawPiece(ctx, @Model.pieces[21].X, @Model.pieces[21].Y, @Model.pieces[21].W, @Model.pieces[21].C, @Model.pieces[21].N);//21
        drawPiece(ctx, @Model.pieces[22].X, @Model.pieces[22].Y, @Model.pieces[22].W, @Model.pieces[22].C, @Model.pieces[22].N);//22
        drawPiece(ctx, @Model.pieces[23].X, @Model.pieces[23].Y, @Model.pieces[23].W, @Model.pieces[23].C, @Model.pieces[23].N);//23
        drawPiece(ctx, @Model.pieces[24].X, @Model.pieces[24].Y, @Model.pieces[24].W, @Model.pieces[24].C, @Model.pieces[24].N);//24
        drawPiece(ctx, @Model.pieces[25].X, @Model.pieces[25].Y, @Model.pieces[25].W, @Model.pieces[25].C, @Model.pieces[25].N);//25
        drawPiece(ctx, @Model.pieces[26].X, @Model.pieces[26].Y, @Model.pieces[26].W, @Model.pieces[26].C, @Model.pieces[26].N);//26
        drawPiece(ctx, @Model.pieces[27].X, @Model.pieces[27].Y, @Model.pieces[27].W, @Model.pieces[27].C, @Model.pieces[27].N);//27
        drawPiece(ctx, @Model.pieces[28].X, @Model.pieces[28].Y, @Model.pieces[28].W, @Model.pieces[28].C, @Model.pieces[28].N);//28
        drawPiece(ctx, @Model.pieces[29].X, @Model.pieces[29].Y, @Model.pieces[29].W, @Model.pieces[29].C, @Model.pieces[29].N);//29
        drawPiece(ctx, @Model.pieces[30].X, @Model.pieces[30].Y, @Model.pieces[30].W, @Model.pieces[30].C, @Model.pieces[30].N);//30
        drawPiece(ctx, @Model.pieces[31].X, @Model.pieces[31].Y, @Model.pieces[31].W, @Model.pieces[31].C, @Model.pieces[31].N);//31
        
        
        function getMousePos(canvas, evt) {
            var rect = canvas.getBoundingClientRect();
            return {
                x: evt.clientX - rect.left,
                y: evt.clientY - rect.top
            };
        }
       
        //function checkInside(x,y,)
    </script>
</body>

